// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/mightyK1ngRichard",
            "email": "dimapermyakov55@gmai.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v3/cities": {
            "get": {
                "description": "Получение города(-ов) и фильтрация при поиске",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Города"
                ],
                "summary": "Список городов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Получаем определённый город",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация поиска",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.CitiesListResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление информации о городе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Города"
                ],
                "summary": "Обновление информации о городе",
                "parameters": [
                    {
                        "description": "Обновленная информация о городе",
                        "name": "updated_city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.UpdateCityReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.UpdateCityResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание города",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Города"
                ],
                "summary": "Создание города",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название города",
                        "name": "city_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID статуса города",
                        "name": "status_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание города",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображение города",
                        "name": "image_url",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ds.AddCityResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление города по его идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Города"
                ],
                "summary": "Удаление города",
                "parameters": [
                    {
                        "description": "ID города для удаления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.DeleteCityReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Город успешно удален",
                        "schema": {
                            "$ref": "#/definitions/ds.DeleteCityRes"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            }
        },
        "/api/v3/cities/add-city-into-hike": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавление города в корзину. Если корзина не найдена, она будет сформирована",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Города"
                ],
                "summary": "Добавление города в поход",
                "parameters": [
                    {
                        "description": "Данные для добавления города в поход",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.AddCityIntoHikeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID из destinationHikes",
                        "schema": {
                            "$ref": "#/definitions/ds.AddCityIntoHikeResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            }
        },
        "/api/v3/users/login": {
            "post": {
                "description": "Вход нового пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Детали входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/ds.LoginSwaggerResp"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            }
        },
        "/api/v3/users/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Завершение сеанса текущего пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Выход пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"Bearer \"",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный выход",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResp"
                        }
                    }
                }
            }
        },
        "/api/v3/users/sign_up": {
            "post": {
                "description": "Регистрация нового пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Детали регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.RegisterReq"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/ping": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Show hello text",
                "responses": {}
            }
        }
    },
    "definitions": {
        "ds.AddCityIntoHikeReq": {
            "type": "object",
            "required": [
                "city_id",
                "serial_number"
            ],
            "properties": {
                "city_id": {
                    "type": "integer",
                    "example": 1
                },
                "serial_number": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ds.AddCityIntoHikeResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.AddCityResp": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.CitiesListResp": {
            "type": "object",
            "properties": {
                "basket_id": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.City"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.City": {
            "type": "object",
            "properties": {
                "city_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/ds.CityStatus"
                },
                "status_id": {
                    "type": "integer"
                }
            }
        },
        "ds.CityStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status_name": {
                    "type": "string"
                }
            }
        },
        "ds.DeleteCityReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "ds.DeleteCityRes": {
            "type": "object",
            "properties": {
                "deleted_id": {
                    "type": "integer"
                }
            }
        },
        "ds.LoginSwaggerResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "ds.RegisterReq": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ds.UpdateCityReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "city_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status_id": {
                    "type": "integer"
                }
            }
        },
        "ds.UpdateCityResp": {
            "type": "object",
            "properties": {
                "city_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "handler.errorResp": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Описание ошибки"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7070",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "VIKINGS",
	Description:      "Viking's hikes",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
